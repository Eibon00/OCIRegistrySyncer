---
- name: Verify synchronized images in target registry
  hosts: localhost
  gather_facts: no
  vars_files:
    - ../config/vault.yml
    - ../config/images.yml

  vars:
    _input_target_registry: "{{ target_registry | default('') }}"

  tasks:
    - name: Set actual target_registry
      set_fact:
        registry_url_raw: >-
          {{
            (_input_target_registry is defined and (_input_target_registry | trim | length > 0))
              | ternary(_input_target_registry, vault_registry_url)
          }}
        registry_host: "{{ registry_url_raw | regex_replace('^https?://', '') }}"
        registry_is_https: "{{ registry_url_raw is search('^https://') }}"
        registry_scheme: "{{ 'https' if registry_is_https else 'http' }}"

    - name: Show which registry is being verified
      ansible.builtin.debug:
        msg: >-
          Verifying registry: {{ registry_url_raw }}
          (mode: {{ 'HTTPS secure' if registry_is_https else 'HTTP insecure' }})

    - name: Install and config Yggdrasil
      become: true
      import_tasks: tasks/setup_yggdrasil.yml

    - name: Initialize counters
      set_fact:
        success_count: 0
        failure_count: 0

    - name: Verify each image via registry API
      vars:
        image_name: "{{ item.split(':')[0] }}"
        image_tag: "{{ item.split(':')[1] }}"
      ansible.builtin.uri:
        url: "{{ registry_scheme }}://{{ registry_host }}/v2/{{ image_name }}/manifests/{{ image_tag }}"
        method: GET
        user: "{{ vault_registry_username }}"
        password: "{{ vault_registry_password }}"
        force_basic_auth: yes
        validate_certs: "{{ registry_is_https }}"
        headers:
          Accept: "application/vnd.docker.distribution.manifest.v2+json"
        status_code: [200]
      register: verify_result
      failed_when: verify_result.status != 200
      ignore_errors: yes
      loop: "{{ images }}"
      loop_control:
        label: "{{ item }}"

    - name: Count results
      set_fact:
        success_count: "{{ verify_result.results | selectattr('status', 'defined') | selectattr('status', 'equalto', 200) | list | length }}"
        failure_count: "{{ verify_result.results | rejectattr('status', 'equalto', 200) | list | length }}"

    - name: Show verification summary
      ansible.builtin.debug:
        msg: |
          Verified images : {{ success_count }}
          Failed images : {{ failure_count }}

    - name: Fail if there are any failed verifications
      ansible.builtin.fail:
        msg: "发现 {{ failure_count }} 个镜像未成功同步！"
      when: failure_count | int > 0
