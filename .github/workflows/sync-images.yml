name: Docker Image Sync

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: ["main"]
    paths:
      - "config/images.yml"
  pull_request:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  schedule:
    - cron: "30 5 * * 1,3" #Runs at 05:30, only on Monday and Wednesday.

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  image-sync:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - run: echo "ðŸŽ‰ The job was automatically triggered by a ${{ github.event_name }} event."

      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Docker
        uses: docker/setup-docker-action@v4
        with:
          daemon-config: |
            {
              "experimental": true,
              "features": {
                "buildkit": true
              }
            }

      - name: Setup Ansible
        id: ansible
        uses: rishabhc32/install-ansible@v1.2.2
        with:
          python-version: "3.12"
          ansible-package: "ansible==12.0.0"

      - name: Check if DockerHub credentials are set
        id: dockerhub-check
        run: |
          if [ -z "${{secrets.DOCKERHUB_USERNAME}}" ] && [ -z "${{secrets.DOCKERHUB_PASSWORD}}" ]; then
            echo "dockerhub_set=false" >> $GITHUB_OUTPUT
          else
            echo "dockerhub_set=true" >> $GITHUB_OUTPUT
          fi

      - name: Login to DockeHub (optional)
        if: ${{ steps.dockerhub-check.outputs.dockerhub_set == 'true' }}
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Login to Github Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Run Ansible Playbook
        env:
          ANSIBLE_VAULT_PASSWORD: ${{ secrets.ANSIBLE_VAULT_PASSWORD }}
        run: |
          ansible-playbook -i localhost, -c local ansible/sync-images.yml \
          -e "target_registry=${{ inputs.target_registry }}" \
          --vault-password-file <(echo $ANSIBLE_VAULT_PASSWORD)

      - name: Export synced image list
        id: export
        run: |
          echo "synced_images=$(yq '.images | join(\",\")' config/images.yml)" >> $GITHUB_OUTPUT

  verify:
    needs: image-sync
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Ansible
        id: ansible
        uses: rishabhc32/install-ansible@v1.2.2
        with:
          python-version: "3.12"
          ansible-package: "ansible==12.0.0"

      - name: Run verification playbook
        env:
          ANSIBLE_VAULT_PASSWORD: ${{ secrets.ANSIBLE_VAULT_PASSWORD }}
        run: |
          ansible-playbook ansible/verify-images.yml \
          -e "target_registry=${{ inputs.target_registry }}" \
            --vault-password-file <(echo "$ANSIBLE_VAULT_PASSWORD")
